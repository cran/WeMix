// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calc_lin_lnl_quad_fast
arma::mat calc_lin_lnl_quad_fast(arma::vec y, arma::vec yhat, int level, List Z, List Qi, List omega, List W, List C, List qp, List omegaFull, List QiFull, List ZFull, bool top, bool atPoint, int integralMultiplierExponent, int integralZColumn, bool verbose, int acc);
RcppExport SEXP _WeMix_calc_lin_lnl_quad_fast(SEXP ySEXP, SEXP yhatSEXP, SEXP levelSEXP, SEXP ZSEXP, SEXP QiSEXP, SEXP omegaSEXP, SEXP WSEXP, SEXP CSEXP, SEXP qpSEXP, SEXP omegaFullSEXP, SEXP QiFullSEXP, SEXP ZFullSEXP, SEXP topSEXP, SEXP atPointSEXP, SEXP integralMultiplierExponentSEXP, SEXP integralZColumnSEXP, SEXP verboseSEXP, SEXP accSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yhat(yhatSEXP);
    Rcpp::traits::input_parameter< int >::type level(levelSEXP);
    Rcpp::traits::input_parameter< List >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< List >::type Qi(QiSEXP);
    Rcpp::traits::input_parameter< List >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< List >::type W(WSEXP);
    Rcpp::traits::input_parameter< List >::type C(CSEXP);
    Rcpp::traits::input_parameter< List >::type qp(qpSEXP);
    Rcpp::traits::input_parameter< List >::type omegaFull(omegaFullSEXP);
    Rcpp::traits::input_parameter< List >::type QiFull(QiFullSEXP);
    Rcpp::traits::input_parameter< List >::type ZFull(ZFullSEXP);
    Rcpp::traits::input_parameter< bool >::type top(topSEXP);
    Rcpp::traits::input_parameter< bool >::type atPoint(atPointSEXP);
    Rcpp::traits::input_parameter< int >::type integralMultiplierExponent(integralMultiplierExponentSEXP);
    Rcpp::traits::input_parameter< int >::type integralZColumn(integralZColumnSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type acc(accSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_lin_lnl_quad_fast(y, yhat, level, Z, Qi, omega, W, C, qp, omegaFull, QiFull, ZFull, top, atPoint, integralMultiplierExponent, integralZColumn, verbose, acc));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WeMix_calc_lin_lnl_quad_fast", (DL_FUNC) &_WeMix_calc_lin_lnl_quad_fast, 18},
    {NULL, NULL, 0}
};

RcppExport void R_init_WeMix(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
